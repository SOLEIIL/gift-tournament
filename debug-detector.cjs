// debug-detector.cjs
// Script de debug pour identifier le probl√®me du d√©tecteur
require('dotenv').config();
const TelegramGiftDetector = require('./services/telegramGiftDetector.cjs');

async function debugDetector() {
  try {
    console.log('üîç DEBUG DU D√âTECTEUR TELEGRAM');
    console.log('================================');
    
    const config = {
      telegramApiId: process.env.TELEGRAM_API_ID,
      telegramApiHash: process.env.TELEGRAM_API_HASH,
      telegramSessionString: process.env.TELEGRAM_SESSION_STRING,
      depositAccountUsername: 'WxyzCrypto',
      webhookUrl: 'https://gift-tournament-git-main-soleiils-projects.vercel.app/api/deposit-webhook',
      webhookSecret: 'wxyz-webhook-secret-2024',
      apiKey: 'wxyz-crypto-secure-key-2024'
    };
    
    console.log('‚úÖ Configuration charg√©e');
    
    const detector = new TelegramGiftDetector(config);
    console.log('‚úÖ Instance cr√©√©e');
    
    console.log('üöÄ D√©marrage du d√©tecteur...');
    await detector.start();
    
    console.log('‚úÖ D√©tecteur d√©marr√© avec succ√®s !');
    console.log('‚è≥ Attente de 10 secondes pour v√©rifier la stabilit√©...');
    
    setTimeout(async () => {
      console.log('üîç V√©rification du statut...');
      console.log('isRunning:', detector.isRunning);
      console.log('Client connect√©:', !!detector.client);
      
      await detector.stop();
      console.log('‚úÖ Test termin√© avec succ√®s');
      process.exit(0);
    }, 10000);
    
  } catch (error) {
    console.error('‚ùå ERREUR FATALE:', error.message);
    console.error('Stack trace:', error.stack);
    process.exit(1);
  }
}

debugDetector();

