// create-test-gift.cjs
// Script pour cr√©er un gift de test dans l'inventaire

const { SupabaseInventoryManager, supabase } = require('./lib/supabase.cjs');

async function createTestGift() {
  try {
    console.log('üéÅ CR√âATION D\'UN GIFT DE TEST');
    console.log('================================');
    
    // 1. Cr√©er ou r√©cup√©rer l'utilisateur de test
    console.log('\n1Ô∏è‚É£ Cr√©ation de l\'utilisateur de test...');
    const user = await SupabaseInventoryManager.getOrCreateUser({
      telegram_id: '123456789',
      telegram_username: 'testuser',
      telegram_first_name: 'Test',
      telegram_last_name: 'User'
    });
    console.log(`‚úÖ Utilisateur: ${user.id} (@${user.telegram_username})`);
    
    // 2. Cr√©er un nouveau gift de test
    console.log('\n2Ô∏è‚É£ Cr√©ation du gift de test...');
    const gift = await SupabaseInventoryManager.getOrCreateGift({
      collectibleId: 'LiveTestGift-' + Date.now(),
      giftName: 'Gift de Test Live',
      collectibleModel: 'Test Model (5‚Ä∞)',
      collectibleBackdrop: 'Test Backdrop (10‚Ä∞)',
      collectibleSymbol: 'Test Symbol (15‚Ä∞)',
      giftValue: 50
    });
    console.log(`‚úÖ Gift cr√©√©: ${gift.id} (${gift.gift_name})`);
    
    // 3. Ajouter le gift √† l'inventaire
    console.log('\n3Ô∏è‚É£ Ajout √† l\'inventaire...');
    const inventoryItem = await SupabaseInventoryManager.addToInventory(
      user.id,
      gift.id,
      'test_live_message_' + Date.now(),
      {
        giftName: gift.gift_name,
        collectibleId: gift.collectible_id,
        giftValue: gift.gift_value
      }
    );
    console.log(`‚úÖ Gift ajout√© √† l'inventaire: ${inventoryItem.id}`);
    
    // 4. V√©rifier l'inventaire final
    console.log('\n4Ô∏è‚É£ V√©rification de l\'inventaire...');
    const finalInventory = await SupabaseInventoryManager.getUserInventory('123456789');
    console.log(`üì¶ Inventaire final: ${finalInventory.length} gifts actifs`);
    
    console.log('\nüéâ GIFT DE TEST CR√â√â AVEC SUCC√àS !');
    console.log('=====================================');
    console.log('üí° Maintenant vous pouvez:');
    console.log('   1. Lancer le moniteur: node monitor-inventory-live.cjs');
    console.log('   2. Retirer le gift: node test-withdraw-sync.cjs');
    console.log('   3. Voir la synchronisation en temps r√©el !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation:', error);
  }
}

// Ex√©cuter la cr√©ation
createTestGift();
